#
# Media Cloud Vagrant configuration
# ---
#
# For requirements and instructions, please see: FIXME
#

VAGRANTFILE_API_VERSION = "2"

#
# AWS defaults
#

# AMI (see https://cloud-images.ubuntu.com/locator/ec2/)
# ("us-east-1 xenial 16.04 LTS amd64 hvm:ebs-ssd")
AWS_AMI           = ENV['AWS_AMI']            || "ami-4dd2575b"
AWS_REGION        = ENV['AWS_REGION']         || "us-east-1"
AWS_INSTANCE_NAME = ENV['AWS_INSTANCE_NAME']  || "Media Cloud Vagrant test box"

# "t1.tiny" is not enough to install and run Media Cloud because it doesn't
# have enough RAM available.
# "m3.medium" is just enough to install Media Cloud and run the full unit test
# suite. However, you might want to run Media Cloud on a bigger instance with
# more RAM if you are about to use Media Cloud in production environments.
AWS_INSTANCE_TYPE = ENV['AWS_AMI']            || "m3.medium"


# OS detection (https://stackoverflow.com/questions/26811089/vagrant-how-to-have-host-platform-specific-provisioning-steps)
module OS
    def OS.windows?
        (/cygwin|mswin|mingw|bccwin|wince|emx/ =~ RUBY_PLATFORM) != nil
    end

    def OS.mac?
        (/darwin/ =~ RUBY_PLATFORM) != nil
    end

    def OS.unix?
        !OS.windows?
    end

    def OS.linux?
        OS.unix? and not OS.mac?
    end
end

if OS.windows?

  if not `reg query "HKU\\S-1-5-19"`  # https://stackoverflow.com/a/6691678
    abort("Please run this Vagrant instance from Administrator (needed for creating symlinks).")
  end

  if `git config core.symlinks`.strip! != 'true'
    # Probably running on Windows which have symlinks disabled by default (as they require Administrator privileges)
    abort("Git's core.symlinks is set to false; please set to true and clone the repository again.")
  end

end


#
# Main configuration
#
Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  # Hostname
  config.vm.hostname = "mediacloud.local"


  #
  # on VirtualBox:
  #     vagrant up --provider=virtualbox
  #
  config.vm.provider :virtualbox do |vb, override|

    # VM name
    vm_name = "mediacloud"
    vb.name = vm_name

    # MeCAB needs more RAM than the default 1 GB
    vb.memory = 2048
    vb.cpus = 2

    # Add some swap too to accommodate MeCAB
    swap_vdisk_filename = 'mediacloud-swap.vdi'
    unless File.exist?(swap_vdisk_filename)
      vb.customize [
        'createhd',
        '--filename', swap_vdisk_filename,
        '--size', 8 * 1024  # if you change this size, update add_swap.sh too
      ]
    end
    vb.customize [
      'storageattach', :id,
      '--storagectl', 'SCSI',
      '--port', 4,
      '--device', 0,
      '--type', 'hdd',
      '--medium', swap_vdisk_filename
    ]
    override.vm.provision "shell", privileged: true, path: "add_swap.sh"
    override.vm.provision "shell", privileged: true, path: "provision_root.sh"
    override.vm.provision "shell", privileged: false, path: "provision_user.sh"

    # Ubuntu 16.04 (64 bit)
    override.vm.box = "ubuntu/xenial64"

    override.vm.network "private_network", type: "dhcp"

    # Access Media Cloud's 3000 port by opening localhost:3001
    override.vm.network :forwarded_port, guest: 3000, host: 3001

    # On VirtualBox, mount Media Cloud's repository to /mediacloud
    # Path is relative to ./script/vagrant
    override.vm.synced_folder "../../", "/mediacloud",
      type: "smb",                                # "virtualbox" type doesn't support moving files properly
      mount_options: ["vers=3.02", "mfsymlinks"]  # enable SMB symlinks

  end

  #
  # on AWS EC2:
  #     vagrant plugin install vagrant-aws
  #     vagrant up --provider=aws
  #
  config.vm.provider :aws do |aws, override|

    if ARGV.include? '--provider=aws'

      if ENV["AWS_ACCESS_KEY_ID"].nil? ||
         ENV["AWS_SECRET_ACCESS_KEY"].nil? ||
         ENV["AWS_KEYPAIR_NAME"].nil? ||
         ENV["AWS_SSH_PRIVKEY"].nil? ||
         ENV["AWS_SECURITY_GROUP"].nil?

        err_message = <<-eos
Set the following environment variables before continuing:

    export AWS_ACCESS_KEY_ID="AKIAIOSFODNN7EXAMPLE" # The API key used to make requests to AWS
    export AWS_SECRET_ACCESS_KEY="wJalrXUtnFEMI/K7MDENG" # The secret key to make AWS API requests
    export AWS_KEYPAIR_NAME="development" # The name of the keypair used for this EC2 instance
    export AWS_SSH_PRIVKEY="~/development.pem" # The path to the private key for the named keypair
    export AWS_SECURITY_GROUP="default" # Security group to assign to this EC2 instance

See doc/README.vagrant.markdown for instructions on how to set those variables.
        eos

        abort(err_message)

      end
    end

    override.vm.box = "ubuntu_aws"
    override.vm.box_url = "aws_ec2_dummy.box"

    override.vm.provision "shell", privileged: true, path: "provision_root.sh"
    override.vm.provision "shell", privileged: false, path: "provision_user.sh"

    # default username of Ubuntu ABIs
    override.ssh.username = "ubuntu"

    aws.access_key_id = ENV["AWS_ACCESS_KEY_ID"]
    aws.secret_access_key = ENV["AWS_SECRET_ACCESS_KEY"]

    aws.keypair_name = ENV["AWS_KEYPAIR_NAME"]
    override.ssh.private_key_path = ENV["AWS_SSH_PRIVKEY"]

    aws.region = AWS_REGION
    aws.ami    = AWS_AMI
    aws.instance_type = AWS_INSTANCE_TYPE
    aws.tags = { 'Name' => AWS_INSTANCE_NAME }

    # Media Cloud barely fits into instance's default 8 GB
    aws.block_device_mapping = [{
      'DeviceName' => '/dev/sda1',
      'Ebs.VolumeSize' => 40
    }]

    # Wait for more than the default (120 seconds) for the instance to start
    aws.instance_ready_timeout = 360

    # Fix https://github.com/mitchellh/vagrant-aws/issues/331
    override.nfs.functional = false

    aws.security_groups = [ ENV["AWS_SECURITY_GROUP"] ]

    # On EC2, copy over Media Cloud's repository to /mediacloud (do not mount to preserve symlinks on EC2)
    # Path is relative to ./script/vagrant
    override.vm.synced_folder "../../", "/mediacloud",
        type: "rsync",
        rsync__args: ["--verbose", "--archive", "--delete", "-z"]

  end

end
